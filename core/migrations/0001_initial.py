# Generated by Django 5.0.7 on 2024-11-27 15:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_leaderboards', models.BooleanField(default=True)),
                ('show_team_scores', models.BooleanField(default=True)),
                ('show_report_and_stats', models.BooleanField(default=True)),
                ('show_submission_overview_chart', models.BooleanField(default=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='lessons/')),
                ('category', models.CharField(choices=[('General', 'General'), ('Open Source Intelligence', 'Open Source Intelligence'), ('Cryptography', 'Cryptography'), ('Forensics', 'Forensics')], max_length=100)),
                ('publish_date', models.DateField()),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('challenge_submission', 'Challenge Submission'), ('failed_submission', 'Failed Submission')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_message', models.TextField()),
                ('bot_response', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='core.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_sent', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=128)),
                ('points', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_teams', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, related_name='teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL)),
                ('invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_invites', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='core.team')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(blank=True, choices=[('General', 'General'), ('Cryptography', 'Cryptography'), ('Forensics', 'Forensics'), ('Open Source Intelligence', 'Open Source Intelligence')], max_length=30, null=True)),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='challenges/files/')),
                ('link', models.URLField(blank=True, null=True)),
                ('hints', models.TextField(blank=True, null=True)),
                ('points', models.IntegerField()),
                ('visible', models.BooleanField(default=True)),
                ('flag', models.CharField(default='', max_length=255)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('scoring_type', models.CharField(choices=[('individual', 'Individual'), ('team', 'Team')], default='individual', max_length=10)),
                ('section', models.CharField(blank=True, max_length=10, null=True)),
                ('completed_teams', models.ManyToManyField(blank=True, to='core.team')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('professor', 'Professor'), ('student', 'Student')], default='student', max_length=10)),
                ('verified', models.BooleanField(default=False)),
                ('must_change_password', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('verification_code_sent_at', models.DateTimeField(blank=True, null=True)),
                ('points', models.IntegerField(default=0)),
                ('correct_submissions', models.IntegerField(default=0)),
                ('failed_submissions', models.IntegerField(default=0)),
                ('last_analysis_update', models.DateTimeField(blank=True, null=True)),
                ('last_correct_submissions', models.IntegerField(default=0)),
                ('last_analysis', models.TextField(blank=True, null=True)),
                ('last_failed_submissions', models.IntegerField(default=0)),
                ('alias', models.CharField(blank=True, max_length=30, null=True)),
                ('cybersecurity_trends', models.TextField(blank=True, null=True)),
                ('section', models.CharField(blank=True, max_length=10, null=True)),
                ('completed_challenges', models.ManyToManyField(blank=True, to='core.challenge')),
                ('last_suggested_lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suggested_to_students', to='core.lesson')),
                ('read_lessons', models.ManyToManyField(blank=True, related_name='students_who_read', to='core.lesson')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(default=False)),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.challenge')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='FailedSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.challenge')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeLeaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_submissions', models.IntegerField(default=0)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.challenge')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile')),
            ],
            options={
                'unique_together': {('challenge', 'user_profile')},
            },
        ),
    ]
