"""
Django settings for ctf project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see==
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from django.core.management.utils import get_random_secret_key
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")
#SECRET_KEY = get_random_secret_key


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "False") == "true"
#DEBUG = True

# Define your custom 404 error handler

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOST").split(" ")
#ALLOWED_HOSTS = ['*']


CSRF_TRUSTED_ORIGINS = [
    "https://ctf-updated-website.onrender.com",  # Add your Render domain
]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'channels',

]

CKEDITOR_UPLOAD_PATH = 'uploads/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'core.middleware.AuthTemporaryPasswordAndVerificationMiddleware',

]

ROOT_URLCONF = 'ctf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.dashboard_config',
            ],
        },
    },
]

STATIC_URL = '/static/'

STATICFILES_DIRS = [BASE_DIR / "static"]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'


WSGI_APPLICATION = 'ctf.wsgi.application'

ASGI_APPLICATION = 'ctf.asgi.application'

# Add Channels layer configuration (optional, for scaling)
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}
# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',  # This will store the SQLite database in the project root directory
    }
}

database_url = os.environ.get("DATABASE_URL")
DATABASES["default"] = dj_database_url.parse(database_url)


#DATABASES["default"] = dj_database_url.parse('postgresql://ctf2024_epoz_user:Xx8JYyMktm8NBkEsTuE853Udecqu7zJW@dpg-d0e0pshr0fns73ckv8d0-a.singapore-postgres.render.com/ctf2024_epoz')


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# Internationalization
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Manila'

USE_I18N = True

USE_TZ = True



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGOUT_REDIRECT_URL = '/'

CSRF_FAILURE_VIEW = 'core.views.csrf_failure'

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# CHATGPT OPEN API CHATBOT
OPENAI_API_KEY = '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'

# SYSTEM EMAIL
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'capturetheflag2024@gmail.com'
EMAIL_HOST_PASSWORD = 'ztdxuiqxegumovcu'  # Your generated app password
DEFAULT_FROM_EMAIL = 'capturetheflag2024@gmail.com'


#EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'capture.flag2024@gmail.com')
#EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'pgxiitpvapycvzsl')

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

